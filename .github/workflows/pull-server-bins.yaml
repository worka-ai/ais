name: Sync Server Binaries

# Manually trigger or schedule as needed
on:
  workflow_dispatch:

jobs:
  sync-server-bins:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # To create/update releases in this public repo

    steps:
      - name: Checkout public repo
        uses: actions/checkout@v3

      - name: Get latest release tag from private repo
        id: get_private_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: 'worka-ai', 
              repo: 'worka'
            });
            core.setOutput('tag', release.data.tag_name);
            core.setOutput('assets', JSON.stringify(release.data.assets));
            core.setOutput('body', release.data.body || '');


      - name: Download private release assets via GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          TAG=${{ steps.get_private_release.outputs.tag }}
          mkdir -p server-bins
          gh release download "$TAG" --repo worka-ai/worka --dir server-bins

      - name: Authenticate with GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create or update public release with assets
        run: |
          TAG=${{ steps.get_private_release.outputs.tag }}
          REPO=${{ github.repository }}
          # Write multi-line notes to a file to preserve formatting
          printf '%s\n' "${{ steps.get_private_release.outputs.body }}" > release_notes.md

          if gh release view "$TAG" --repo "$REPO"; then
            # Update assets and notes on existing release
            gh release upload "$TAG" server-bins/* --clobber --repo "$REPO"
            gh release edit "$TAG" --notes-file release_notes.md --repo "$REPO"
          else
            # Create a new release with assets and notes
            gh release create "$TAG" server-bins/* --notes-file release_notes.md --repo "$REPO"
          fi
