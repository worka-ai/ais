# coding: utf-8

"""
    

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from worka.models.create_agent_request_agents_inner_rules_inner_tools_inner import CreateAgentRequestAgentsInnerRulesInnerToolsInner
from typing import Optional, Set
from typing_extensions import Self

class CreateAgentRequestAgentsInnerRulesInner(BaseModel):
    """
    CreateAgentRequestAgentsInnerRulesInner
    """ # noqa: E501
    content: StrictStr
    description: StrictStr
    id: StrictInt
    name: StrictStr
    position: StrictInt
    rule_created_at: datetime
    tags: Optional[List[StrictStr]] = None
    tenant_id: StrictInt
    tools: Optional[List[CreateAgentRequestAgentsInnerRulesInnerToolsInner]] = None
    version_created_at: datetime
    version_id: StrictInt
    __properties: ClassVar[List[str]] = ["content", "description", "id", "name", "position", "rule_created_at", "tags", "tenant_id", "tools", "version_created_at", "version_id"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of CreateAgentRequestAgentsInnerRulesInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in tools (list)
        _items = []
        if self.tools:
            for _item_tools in self.tools:
                if _item_tools:
                    _items.append(_item_tools.to_dict())
            _dict['tools'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of CreateAgentRequestAgentsInnerRulesInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "content": obj.get("content"),
            "description": obj.get("description"),
            "id": obj.get("id"),
            "name": obj.get("name"),
            "position": obj.get("position"),
            "rule_created_at": obj.get("rule_created_at"),
            "tags": obj.get("tags"),
            "tenant_id": obj.get("tenant_id"),
            "tools": [CreateAgentRequestAgentsInnerRulesInnerToolsInner.from_dict(_item) for _item in obj["tools"]] if obj.get("tools") is not None else None,
            "version_created_at": obj.get("version_created_at"),
            "version_id": obj.get("version_id")
        })
        return _obj


