/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateTenant
 */
@JsonPropertyOrder({
  CreateTenantRequest.JSON_PROPERTY_DETERMINE_CONVERSATION_WITH_AGENT,
  CreateTenantRequest.JSON_PROPERTY_DETERMINE_CONVERSATION_WITH_NARRATIVE,
  CreateTenantRequest.JSON_PROPERTY_TENANT_ID,
  CreateTenantRequest.JSON_PROPERTY_USERNAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-20T10:31:22.571501+01:00[Europe/London]", comments = "Generator version: 7.14.0")
public class CreateTenantRequest {
  public static final String JSON_PROPERTY_DETERMINE_CONVERSATION_WITH_AGENT = "determine_conversation_with_agent";
  @javax.annotation.Nonnull
  private Long determineConversationWithAgent;

  public static final String JSON_PROPERTY_DETERMINE_CONVERSATION_WITH_NARRATIVE = "determine_conversation_with_narrative";
  @javax.annotation.Nonnull
  private String determineConversationWithNarrative;

  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  @javax.annotation.Nonnull
  private Long tenantId;

  public static final String JSON_PROPERTY_USERNAME = "username";
  @javax.annotation.Nonnull
  private String username;

  public CreateTenantRequest() {
  }

  public CreateTenantRequest determineConversationWithAgent(@javax.annotation.Nonnull Long determineConversationWithAgent) {
    
    this.determineConversationWithAgent = determineConversationWithAgent;
    return this;
  }

  /**
   * Get determineConversationWithAgent
   * @return determineConversationWithAgent
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DETERMINE_CONVERSATION_WITH_AGENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getDetermineConversationWithAgent() {
    return determineConversationWithAgent;
  }


  @JsonProperty(JSON_PROPERTY_DETERMINE_CONVERSATION_WITH_AGENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDetermineConversationWithAgent(@javax.annotation.Nonnull Long determineConversationWithAgent) {
    this.determineConversationWithAgent = determineConversationWithAgent;
  }

  public CreateTenantRequest determineConversationWithNarrative(@javax.annotation.Nonnull String determineConversationWithNarrative) {
    
    this.determineConversationWithNarrative = determineConversationWithNarrative;
    return this;
  }

  /**
   * Get determineConversationWithNarrative
   * @return determineConversationWithNarrative
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DETERMINE_CONVERSATION_WITH_NARRATIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDetermineConversationWithNarrative() {
    return determineConversationWithNarrative;
  }


  @JsonProperty(JSON_PROPERTY_DETERMINE_CONVERSATION_WITH_NARRATIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDetermineConversationWithNarrative(@javax.annotation.Nonnull String determineConversationWithNarrative) {
    this.determineConversationWithNarrative = determineConversationWithNarrative;
  }

  public CreateTenantRequest tenantId(@javax.annotation.Nonnull Long tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(@javax.annotation.Nonnull Long tenantId) {
    this.tenantId = tenantId;
  }

  public CreateTenantRequest username(@javax.annotation.Nonnull String username) {
    
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(@javax.annotation.Nonnull String username) {
    this.username = username;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTenantRequest createTenantRequest = (CreateTenantRequest) o;
    return Objects.equals(this.determineConversationWithAgent, createTenantRequest.determineConversationWithAgent) &&
        Objects.equals(this.determineConversationWithNarrative, createTenantRequest.determineConversationWithNarrative) &&
        Objects.equals(this.tenantId, createTenantRequest.tenantId) &&
        Objects.equals(this.username, createTenantRequest.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(determineConversationWithAgent, determineConversationWithNarrative, tenantId, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTenantRequest {\n");
    sb.append("    determineConversationWithAgent: ").append(toIndentedString(determineConversationWithAgent)).append("\n");
    sb.append("    determineConversationWithNarrative: ").append(toIndentedString(determineConversationWithNarrative)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

