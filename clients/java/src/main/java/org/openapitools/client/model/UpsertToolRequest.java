/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpsertAgentRequestAgentsInnerRulesInnerToolsInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpsertTool (under a tenant)
 */
@JsonPropertyOrder({
  UpsertToolRequest.JSON_PROPERTY_TOOLS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-20T10:31:22.571501+01:00[Europe/London]", comments = "Generator version: 7.14.0")
public class UpsertToolRequest {
  public static final String JSON_PROPERTY_TOOLS = "tools";
  @javax.annotation.Nonnull
  private List<UpsertAgentRequestAgentsInnerRulesInnerToolsInner> tools = new ArrayList<>();

  public UpsertToolRequest() {
  }

  public UpsertToolRequest tools(@javax.annotation.Nonnull List<UpsertAgentRequestAgentsInnerRulesInnerToolsInner> tools) {
    
    this.tools = tools;
    return this;
  }

  public UpsertToolRequest addToolsItem(UpsertAgentRequestAgentsInnerRulesInnerToolsInner toolsItem) {
    if (this.tools == null) {
      this.tools = new ArrayList<>();
    }
    this.tools.add(toolsItem);
    return this;
  }

  /**
   * Get tools
   * @return tools
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOOLS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UpsertAgentRequestAgentsInnerRulesInnerToolsInner> getTools() {
    return tools;
  }


  @JsonProperty(JSON_PROPERTY_TOOLS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTools(@javax.annotation.Nonnull List<UpsertAgentRequestAgentsInnerRulesInnerToolsInner> tools) {
    this.tools = tools;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpsertToolRequest upsertToolRequest = (UpsertToolRequest) o;
    return Objects.equals(this.tools, upsertToolRequest.tools);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tools);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpsertToolRequest {\n");
    sb.append("    tools: ").append(toIndentedString(tools)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

