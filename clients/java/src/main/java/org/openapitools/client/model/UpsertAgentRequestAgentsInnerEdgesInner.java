/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpsertAgentRequestAgentsInnerEdgesInner
 */
@JsonPropertyOrder({
  UpsertAgentRequestAgentsInnerEdgesInner.JSON_PROPERTY_CONDITIONS,
  UpsertAgentRequestAgentsInnerEdgesInner.JSON_PROPERTY_PRIORITY,
  UpsertAgentRequestAgentsInnerEdgesInner.JSON_PROPERTY_SCRIPT_CONDITION,
  UpsertAgentRequestAgentsInnerEdgesInner.JSON_PROPERTY_TARGET_AGENT_ID
})
@JsonTypeName("UpsertAgentRequest_agents_inner_edges_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-17T16:24:59.041193+01:00[Europe/London]", comments = "Generator version: 7.14.0")
public class UpsertAgentRequestAgentsInnerEdgesInner {
  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  @javax.annotation.Nonnull
  private List<Long> conditions = new ArrayList<>();

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  @javax.annotation.Nonnull
  private Integer priority;

  public static final String JSON_PROPERTY_SCRIPT_CONDITION = "script_condition";
  @javax.annotation.Nullable
  private String scriptCondition;

  public static final String JSON_PROPERTY_TARGET_AGENT_ID = "target_agent_id";
  @javax.annotation.Nonnull
  private Long targetAgentId;

  public UpsertAgentRequestAgentsInnerEdgesInner() {
  }

  public UpsertAgentRequestAgentsInnerEdgesInner conditions(@javax.annotation.Nonnull List<Long> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public UpsertAgentRequestAgentsInnerEdgesInner addConditionsItem(Long conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

  /**
   * 0 or more conditions under which the source agent can invoke the associated [target] [Agent] If empty, the target can be invoked under any circumstances
   * @return conditions
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Long> getConditions() {
    return conditions;
  }


  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConditions(@javax.annotation.Nonnull List<Long> conditions) {
    this.conditions = conditions;
  }

  public UpsertAgentRequestAgentsInnerEdgesInner priority(@javax.annotation.Nonnull Integer priority) {
    
    this.priority = priority;
    return this;
  }

  /**
   * If two edges could be invoked and both are not required then the highest priority one should be executed
   * @return priority
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPriority() {
    return priority;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPriority(@javax.annotation.Nonnull Integer priority) {
    this.priority = priority;
  }

  public UpsertAgentRequestAgentsInnerEdgesInner scriptCondition(@javax.annotation.Nullable String scriptCondition) {
    
    this.scriptCondition = scriptCondition;
    return this;
  }

  /**
   * A JavaScript condition which must evaluate to true for the agent to be executed
   * @return scriptCondition
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCRIPT_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScriptCondition() {
    return scriptCondition;
  }


  @JsonProperty(JSON_PROPERTY_SCRIPT_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScriptCondition(@javax.annotation.Nullable String scriptCondition) {
    this.scriptCondition = scriptCondition;
  }

  public UpsertAgentRequestAgentsInnerEdgesInner targetAgentId(@javax.annotation.Nonnull Long targetAgentId) {
    
    this.targetAgentId = targetAgentId;
    return this;
  }

  /**
   * The agent ID that should be called if [script_condition] or any of the [conditions] are true
   * @return targetAgentId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TARGET_AGENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTargetAgentId() {
    return targetAgentId;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_AGENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTargetAgentId(@javax.annotation.Nonnull Long targetAgentId) {
    this.targetAgentId = targetAgentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpsertAgentRequestAgentsInnerEdgesInner upsertAgentRequestAgentsInnerEdgesInner = (UpsertAgentRequestAgentsInnerEdgesInner) o;
    return Objects.equals(this.conditions, upsertAgentRequestAgentsInnerEdgesInner.conditions) &&
        Objects.equals(this.priority, upsertAgentRequestAgentsInnerEdgesInner.priority) &&
        Objects.equals(this.scriptCondition, upsertAgentRequestAgentsInnerEdgesInner.scriptCondition) &&
        Objects.equals(this.targetAgentId, upsertAgentRequestAgentsInnerEdgesInner.targetAgentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditions, priority, scriptCondition, targetAgentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpsertAgentRequestAgentsInnerEdgesInner {\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    scriptCondition: ").append(toIndentedString(scriptCondition)).append("\n");
    sb.append("    targetAgentId: ").append(toIndentedString(targetAgentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

