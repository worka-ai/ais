/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UpdateLlmConfigRequest : UpdateLLMConfig
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateLlmConfigRequest {
    #[serde(rename = "api_key")]
    pub api_key: String,
    #[serde(rename = "conversation_id", skip_serializing_if = "Option::is_none")]
    pub conversation_id: Option<i64>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<String>,
    #[serde(rename = "model")]
    pub model: String,
    #[serde(rename = "project_id", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<String>,
    #[serde(rename = "provider")]
    pub provider: String,
    #[serde(rename = "temperature")]
    pub temperature: f64,
    #[serde(rename = "tenant_id")]
    pub tenant_id: i64,
    #[serde(rename = "workflow_id", skip_serializing_if = "Option::is_none")]
    pub workflow_id: Option<i64>,
}

impl UpdateLlmConfigRequest {
    /// UpdateLLMConfig
    pub fn new(api_key: String, model: String, provider: String, temperature: f64, tenant_id: i64) -> UpdateLlmConfigRequest {
        UpdateLlmConfigRequest {
            api_key,
            conversation_id: None,
            id: None,
            location: None,
            model,
            project_id: None,
            provider,
            temperature,
            tenant_id,
            workflow_id: None,
        }
    }
}

